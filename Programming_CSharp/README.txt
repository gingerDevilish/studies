=====INTRODUCTION=====
Доброго времени суток и с прошедшими праздниками!
Для начала, Я дико-дико-ДИКО извиняюсь, что сорвала все возможные и невозможные сроки. Уж не будем говорить о причинах, это делу-то не поможет, суть в том, что каждый студент хочет сдать, даже если во время семестра он вел себя очень, очень плохо. Поэтому, взяв зубы в кулак, или что там говорят, когда все страшно и неопределенно, Я все-таки взялась за дело, сделала все лабы и дз, и теперь выкладываю сюда, чтобы это было можно просмотреть.
Надеюсь на Вашу добрую волю.

=====ПРО ЛАБЫ=====
Все сделанные лабы выложены сюда, каждая - в папке с легко узнаваемым названием. Там есть как исполняемые файлы, так и исходный код, даже иногда с комментариями.
Из этих программ есть только одна оконная - а зачем больше? Все остальное прекрасно, замечательно сделалось в консоли.

Почему нет лабы №1?
Потому что ее задание звучало примерно так: прочитать про метаданные, найти, где они расположены и посмотреть. Программу для этого писать, ясен пень, не надо. Если Я все правильно поняла, это делается в несколько щелчков мышкой.

Почему нет лабы №10?
Потому что оказалось, что вместо нее писали РК №2, заданий, соответственно, не сохранилось. Несмотря на это, Я готова к написанию обеих контрольных, если это надо.

=====ПРО ДЗ=====
С этим, конечно, наибольшее количество всего пошло на перекосяк. По меньшей мере, потому что все без исключения задания выглядели мягко говоря страшно. В итоге у Меня не было уверенности в своей способности справиться даже с самым простым вариантом. Однако иногда возникают обстоятельства, когда начинаешь смотреть на все другими глазами.

Я в итоге никому не сообщала о том, что делаю, и до сего момента никто был не в курсе, что же там творится и какой же делается вариант. Соответственно не было ни заданий от семинариста, ни чего-то еще подобного, что, понятное дело, не по правилам, но это не делают косячным саму программу.
Вариант, который Я делала - 5d, желтый вариант, "Hex для Arduino". Вот только непонятно, чем Hex для Arduino отличается от других, поэтому программа прочтет любой файл формата Intel HEX.
Там есть встроенная в программу развернутая справка, возможность вывести результат в файл или на экран. И да, комментарии в коде. (А еще аргументы командной строки можно вводить почти что в любом порядке!)

Почему именно этот вариант? Я работала с Arduino несколько раз, знакомое название и все такое. Но несмотря на более широкое назначение программы, она актуальна. Дело в том, что информация загружается в микроконтроллеры зачатую именно из HEX-файлов, а микроконтроллеры нынче повсюду, временами - в самом распоследнем чайнике, и их распространение будет с годами только расти, и все чаще и чаще умельцам придется разбираться с HEX-файлами (если только все внезапно не перейдут на программирование мышкой).

Почему использовались именно такие методы, а не другие? Потому что Я не особо представляю, как можно сделать по-другому. Нет, правда. Ну, конечно, можно было разрастить код еще в два раза, но зачем? Да и метод там примитивнейший - построчный разбор. Программа куда более простая, чем некоторые лабы.

Отсутствие быдлокода не гарантирую. Но старалась. Почему нет пояснительной записки? Потому что в ней нечего писать. Справка в программе есть, комментарии есть, есть вот этот файл README.txt с тремя абзацами пояснений по этой программе. Не будь там множества разговорных фигур речи и всякой воды, можно было бы обойтись тремя с половиной предложениями. Хотя можно было это все перекопировать в красивый вордовский файлик и снабдить картинками с котятами.

Теперь о папке cryptor-joiner. Да, Я пыталась его написать, когда осталось немного времени. Нет, не успела сделать и половины и вообще не уверена, корректно ли писать эту штуку на C#. Но то, что там в итоге лежит, представляет из себя работающую программу, производящую весьма замысловатое преобразование одного исполняемого файла в другой. Подаем файл А, он шифруется по алгоритму 3DES (он был в лабе №5, так что для начала решила не изобретать велосипед) и встраивается в файл Б, который программа компилирует в процессе работы. Файл Б при запуске расшифровывает содержащийся внутри него файл А и запускает его изнутри себя, хотя при определенных настройках может его еще и сохранить. Справка предполагалась, но недописана, да и само произведение сырое, как вода в дождливый день. Но компилируется, запускается, работает. Занятная штука. Надо будет доделать как-нибудь летом.

Вроде все.
С надеждой на наилучший исход всего этого предприятия,
Алёна.